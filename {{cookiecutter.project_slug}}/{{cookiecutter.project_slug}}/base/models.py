import uuid
from django.contrib.contenttypes.fields import GenericForeignKey
from django.contrib.contenttypes.models import ContentType
from django.db import models
from django.utils.translation import gettext_lazy as _


class AbstractBaseModel(models.Model):
    __doc__ = _("""
    Base abstract model, that has `uuid` instead of `id` and includes `created_at`, `updated_at` fields.
    """)
    uuid = models.UUIDField(
        _('Internal UUID'),
        primary_key=True,
        default=uuid.uuid4,
        editable=False,
        unique=True,
        help_text=_('Autogenerated UUID.')
    )
    created_at = models.DateTimeField(
        _('Created at'),
        auto_now_add=True,
        editable=False,
        help_text=_('Timestamp automatically generated upon creation of the object.')
    )
    updated_at = models.DateTimeField(
        _('Updated at'),
        auto_now=True,
        editable=True,
        help_text=_('Automatically updated to the last modification timestamp.')
    )

    class Meta:
        abstract = True
        ordering = ['updated_at']


class CustomField(models.Model):
    uuid = models.UUIDField(
        _('Internal UUID'),
        primary_key=True,
        default=uuid.uuid4,
        editable=False,
        unique=True,
        help_text=_('Autogenerated UUID.')
    )
    key = models.SlugField(
        _('Key'),
        unique=False,
        db_index=False,
        help_text=_('The name for your custom field.')
    )
    value = models.CharField(
        _('Value'),
        max_length=4096,
        blank=True,
        help_text=_('The content of your custom field.')
    )
    content_type = models.ForeignKey(
        ContentType,
        on_delete=models.CASCADE,
        editable=False
    )
    object_id = models.UUIDField(
        editable=False
    )
    content_object = GenericForeignKey(
        'content_type',
        'object_id'
    )

    def __str__(self):
        return self.key

    class Meta:
        index_together = (('object_id', 'content_type'), ('content_type', 'key'))
        verbose_name = _('Custom Field')
        verbose_name_plural = _('Custom Fields')
        ordering = ['object_id']
